version: '3.7'
networks:
  test-network:
services:
  # Create a test container that will execute commands as if we were running
  # them ourselves. This way, we don't have to install anything onto our machine.
  test-container:
    build:
      dockerfile: test-container.Dockerfile
      context: .
    volumes:
      - $PWD/authorized_keys:/root/.ssh/authorized_keys
      - $PWD/.azure:/root/.azure
      - $PWD/secrets:/secrets
      - $PWD/cache:/cache # Azure is slow as hell; we need to cache some operations
    ports:
      - "2222:22"
    networks:
      test-network:
        aliases:
          - test_machine
  # A convenient service for running Azure commands as kthw-sp.
  kthw_az:
    build:
      dockerfile: test-container.Dockerfile
      context: .
    volumes:
      - $PWD/authorized_keys:/root/.ssh/authorized_keys
      - $PWD/.azure:/root/.azure
    networks:
      test-network:
        aliases:
          - test_machine
    entrypoint:
      - "az"
  # This container will run tests through Ansible playbooks.
  tests:
    build:
      dockerfile: ansible.Dockerfile
      context: .
    environment:
      ANSIBLE_HOST_KEY_CHECKING: "false"
      ANSIBLE_ROLES_PATH: "/tests"
    networks:
      - test-network
    volumes:
      - $PWD/.azure:/root/.azure
      - $PWD/id_rsa:/ssh_key
      - $PWD/tests:/tests
      - $PWD/tests.yaml:/tests.yaml
      - $PWD/secrets:/secrets
      - $PWD/cache:/cache # Azure is slow as hell; we need to cache some operations
  # This container will run deployment steps through Ansible playbooks.
  deployer:
    build:
      dockerfile: ansible.Dockerfile
      context: .
    environment:
      ANSIBLE_HOST_KEY_CHECKING: "false"
      ANSIBLE_ROLES_PATH: "/deploy"
    networks:
      - test-network
    volumes:
      - $PWD/.azure:/root/.azure
      - $PWD/id_rsa:/ssh_key
      - $PWD/deploy:/deploy
      - $PWD/deploy.yaml:/deploy.yaml
      - $PWD/secrets:/secrets
      - $PWD/cache:/cache # Azure is slow as hell; we need to cache some operations

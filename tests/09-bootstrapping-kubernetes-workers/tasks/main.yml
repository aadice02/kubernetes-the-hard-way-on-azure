---
- name: Ensure key network utilities are installed
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      which socat conntrack ipset;
    done
  register: result
  ignore_errors: true

- set_fact:
    want:
      - /usr/bin/socat
      - /usr/sbin/conntrack
      - /usr/sbin/ipset
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 

- name: Ensure swap is disabled
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      sudo swapon --show;
    done
  register: result
  ignore_errors: true

- set_fact:
    want: []
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 

- name: Ensure CNI plugins, containerd, crictl, and kube binaries are present
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      'for file in \
          /usr/local/bin/crictl \
          /usr/local/bin/kubectl \
          /usr/local/bin/kube-proxy \
          /usr/local/bin/kubelet \
          /usr/local/bin/runc \
          /bin/containerd \
          /opt/cni/bin/cni;
        do test -f "$file" && echo "$(hostname): $file";
        done';
    done
  register: result
  ignore_errors: true

- set_fact:
    want:
      - "worker-0: /usr/local/bin/crictl"
      - "worker-0: /usr/local/bin/kubectl"
      - "worker-0: /usr/local/bin/kube-proxy"
      - "worker-0: /usr/local/bin/kubelet"
      - "worker-0: /usr/local/bin/runc"
      - "worker-0: /bin/containerd"
      - "worker-1: /usr/local/bin/crictl"
      - "worker-1: /usr/local/bin/kubectl"
      - "worker-1: /usr/local/bin/kube-proxy"
      - "worker-1: /usr/local/bin/kubelet"
      - "worker-1: /usr/local/bin/runc"
      - "worker-1: /bin/containerd"
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 

- name: Ensure pod CIDR is present in bridge network
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      'jq -r ".ipam.ranges[0][0].subnet" /etc/cni/net.d/10-bridge.conf'
    done
  register: result

- set_fact:
    want:
      - 10.200.0.0/24
      - 10.200.1.0/24
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 

- name: Ensure containerd uses runc for the runtime
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      'printf "$(hostname): "; grep runtime_engine /etc/containerd/config.toml | sed "s/.*= //"';
    done
  register: result

- set_fact:
    want:
      - 'worker-0: "/usr/local/bin/runc"'
      - 'worker-1: "/usr/local/bin/runc"'
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 

- name: Ensure kubelet and kube-proxy files are in the right places
  shell: >-
    for idx in $(seq 0 1);
    do \
      ip_address=$(az network public-ip show -g '{{ azure_resource_group }}' \
        -n "worker-${idx}PublicIP" --query 'ipAddress' -o tsv); \
      ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      "for file in \
          /var/lib/kubelet/worker-${idx}.pem \
          /var/lib/kubelet/worker-${idx}-key.pem \
          /var/lib/kubelet/kubeconfig \
          /var/lib/kubernetes/ca.pem \
          /var/lib/kubelet/kubelet-config.yaml \
          /var/lib/kube-proxy/kube-proxy-config.yaml \
          /etc/systemd/system/containerd.service \
          /etc/systemd/system/kubelet.service \
          /etc/systemd/system/kube-proxy.service; \
        do test -e \"\$file\" && echo \"\$(hostname): \$file\"; \
        done";
    done
  register: result
  ignore_errors: true

- set_fact:
    want:
      - "worker-0: /etc/systemd/system/containerd.service"
      - "worker-0: /etc/systemd/system/kube-proxy.service"
      - "worker-0: /etc/systemd/system/kubelet.service"
      - "worker-0: /var/lib/kube-proxy/kube-proxy-config.yaml"
      - "worker-0: /var/lib/kubelet/kubeconfig"
      - "worker-0: /var/lib/kubelet/kubelet-config.yaml"
      - "worker-0: /var/lib/kubelet/worker-0-key.pem"
      - "worker-0: /var/lib/kubelet/worker-0.pem"
      - "worker-0: /var/lib/kubernetes/ca.pem"
      - "worker-1: /etc/systemd/system/containerd.service"
      - "worker-1: /etc/systemd/system/kube-proxy.service"
      - "worker-1: /etc/systemd/system/kubelet.service"
      - "worker-1: /var/lib/kube-proxy/kube-proxy-config.yaml"
      - "worker-1: /var/lib/kubelet/kubeconfig"
      - "worker-1: /var/lib/kubelet/kubelet-config.yaml"
      - "worker-1: /var/lib/kubelet/worker-1-key.pem"
      - "worker-1: /var/lib/kubelet/worker-1.pem"
      - "worker-1: /var/lib/kubernetes/ca.pem"
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}, errors: {{ result.stderr }}"
  when: diff | length > 0 

- name: Ensure containerd kubelet kube-proxy services have started
  shell: >-
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("worker")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" 'systemctl is-active --quiet containerd kubelet kube-proxy';
    done
  register: result
  ignore_errors:

- set_fact:
    want: "0"
    got: "{{ result.rc }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, output: {{ result.stdout_lines }}"
  when: want != got

- name: Ensure kubelets have come up healthy
  shell: >-
    ip_address=$(az network public-ip show -g '{{ azure_resource_group }}' \
      -n 'controller-0PublicIP' --query 'ipAddress' -o tsv); \
    ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" \
      'kubectl get nodes --kubeconfig admin.kubeconfig | grep -E "worker-[0-9] +Ready" | sed "s/ \+Ready.*//"'
  register: result
  ignore_errors: true

- set_fact:
    want:
      - worker-0
      - worker-1
    got: "{{ result.stdout_lines | unique }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "want {{ want }}, got {{ got }}, diff: {{ diff }}"
  when: diff | length > 0 


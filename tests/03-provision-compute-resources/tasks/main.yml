---

- name: Ensure that a public IP for the Kuvernetes API server has been created
  shell: >
    az network public-ip list | \
      jq -r '.[] | select(.name == "kubernetes-the-hard-way") | .ipAddress'
  register: result

- set_fact:
    ips_found: "{{ result.stdout | regex_findall('[0-9\\.]{4}') }}"

- fail:
    msg: "Wanted an IP address, but got none. Output: {{ result.stdout }}. Found: {{ ips_found }}"
  when: not ips_found

- name: Ensure the subnet for the Kubernetes cluster is present.
  shell: >
    az network vnet subnet list -g "{{ azure_resource_group }}" --vnet-name kthw -o json | \
      jq -r '.[] | select(.name == "kthw-subnet") | .addressPrefix'
  register: result
  ignore_errors: true

- set_fact:
    want: '10.240.0.0/24'
    got: "{{ result.stdout }}"
  ignore_errors: true

- fail:
    msg: "Expected '{{ want }}' but got '{{ got }}'. Full output: '{{ result }}'"
  when: want != got

- name: Ensure that Kubernetes cluster NSGs have been created.
  shell: >-
    az network nsg show -g "{{ azure_resource_group }}" -n kthw-nsg | \
      jq -r '[ .securityRules[] |
      "prio " + (.priority | tostring) +
      " " + (.access | ascii_downcase) +
      " " + (if .destinationPortRange != "*"
            then ((.protocol | ascii_downcase) + ":" + .destinationPortRange)
            else (.protocol | ascii_downcase)
            end) +
      " from " + .sourceAddressPrefix +
      " to " + .destinationAddressPrefix ]'

  register: result
  ignore_errors: true

- set_fact:
    want:
      - "prio 101 allow tcp from 10.200.0.0/16 to 10.240.0.0/24"
      - "prio 102 allow tcp from 10.240.0.0/24 to 10.240.0.0/16"
      - "prio 103 allow udp from 10.200.0.0/16 to 10.240.0.0/24"
      - "prio 104 allow udp from 10.240.0.0/24 to 10.240.0.0/16"
      - "prio 105 allow icmp from 10.200.0.0/16 to 10.240.0.0/24"
      - "prio 106 allow icmp from 10.240.0.0/24 to 10.240.0.0/16"
      - "prio 107 allow tcp:22 from 0.0.0.0/0 to 10.240.0.0/24"
      - "prio 108 allow tcp:6443 from 0.0.0.0/0 to 10.240.0.0/24"
      - "prio 109 allow icmp from 0.0.0.0/0 to 10.240.0.0/24"
    got: "{{ result.stdout | from_json }}"
  ignore_errors: true

- set_fact:
    difference: "{{ want | difference(got) }}"

- fail:
    msg: >-
      "Expected NSG rules differ from actual NSG rules.
       Difference: {{ difference }}. Want: {{want | sort | join(',')}}. Got {{got | sort | join(',')}}"
  when: difference | length > 0

- name: Ensure that the control plane is set up
  shell: az vm list | jq -r '[.[] | select(.name | contains("controller")) | .name] | length'
  register: result

- set_fact:
    want: "3"
    got: "{{ result.stdout }}"
 
- fail:
    msg: "Wanted {{ want }}; got {{ got }}"
  when: want != got

- name: Ensure that the workers are set up
  shell: az vm list | jq -r '[.[] | select(.name | contains("worker")) | .name] | length'
  register: result

- set_fact:
    want: "2" # this should be 3 but I ran into quota issues :(
    got: "{{ result.stdout }}"
 
- fail:
    msg: "Wanted {{ want }}; got {{ got }}"
  when: want != got

- name: Ensure that public IPs for all nodes exist
  shell: >-
    az network public-ip list | \
    jq -r '[.[] | select((.name | contains("controller-")) or (.name | contains("worker-"))) | .name] | length'
  register: result

- set_fact:
    want: "6" # this should be 3 but I ran into quota issues :(
    got: "{{ result.stdout }}"
 
- fail:
    msg: "Wanted {{ want }}; got {{ got }}"
  when: want != got

    # There's a bug here from our commit that changed node names to match the labs.
    # We weren't able to delete the vNic for kthw-worker-1 because _reasons_,
    # so it still shows up in this list despite not existing.
    # We will revert the 'contains(...) | not' statement when that resource _eventually_
    # clears from my subscription.
- name: Ensure that the NICs for all machines can IP forward
  shell: >-
    az network nic list | \
      jq -cr '[.[] | select(.name | contains("kthw-worker-1") | not) | .name + ": " + ( .enableIpForwarding | tostring ) ]'
  register: result

- set_fact:
    want:
      - "controller-0VMNic: true"
      - "controller-1VMNic: true"
      - "controller-2VMNic: true"
      - "worker-0VMNic: true"
      - "worker-1VMNic: true"
    got: "{{ result.stdout | from_json | sort }}"

- set_fact:
    diff: "{{ want | difference(got) }}"

- fail:
    msg: "Wanted {{ want }}. Got {{ got }}. Diff {{ diff | join(',') }}"
  when: diff | length > 0

- name: Ensure that each node can be SSHed into
  shell: >-
    for ip in $(az network public-ip list | jq -r .[].ipAddress | grep -v "null"); \
    do \
      ssh -i /secrets/kthw_ssh_key -o StrictHostKeyChecking=no \
          -o UserKnownHostsFile=/dev/null \
          "ubuntu@$ip" \
          whoami 2>/dev/null; \
    done | grep "ubuntu"
  register: result

- set_fact:
    want: "5"
    got: "{{ (result.stdout).split('\n') | length }}"

- fail:
    msg: "Wanted {{ want }}, got {{ got }}, out: {{ result.stdout }}, err: {{ result.stderr }}"
  when: want != got


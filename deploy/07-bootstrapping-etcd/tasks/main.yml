---
- name: Set the etcd installer url
  set_fact:
    etcd_url: https://github.com/etcd-io/etcd/releases/download/v3.4.10/etcd-v3.4.10-linux-amd64.tar.gz

- name: Install wget
  shell:
    cache_key="/cache/install_wget_controller"; \
    test -f "$cache_key" && exit 0; \
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("kthw-control-plane")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" "sudo apt -y install wget";
    done && touch "$cache_key"
  register: result

- name: Download etcd on all controllers
  shell:
    cache_key="/cache/download_etcd_controller"; \
    test -f "$cache_key" && exit 0; \
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("kthw-control-plane")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" -- wget -q --show-progress --https-only --timestamping "{{ etcd_url }}";
    done && touch "$cache_key"

- name: Install etcd on all controllers
  shell:
    cache_key="/cache/install_etcd_controller"; \
    test -f "$cache_key" && exit 0; \
    for ip_address in $(az network public-ip list -g '{{ azure_resource_group }}' | \
      jq -r '.[] | select(.name |contains("kthw-control-plane")) | .ipAddress');
    do ssh -i /secrets/kthw_ssh_key -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no \
      "ubuntu@$ip_address" -- 'tar -xvf {{ etcd_url.split("/") | last }} && sudo mv etcd*/{etcd,etcdctl} /usr/local/bin/';
    done && touch "$cache_key"
